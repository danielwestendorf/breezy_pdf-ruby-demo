(function(t){t.plot.plugins.push({init:function(t){function v(a,f,h){a=h.points.length/h.pointsize;var b=f.curvedLines;if("undefined"!=typeof b.fit||"undefined"!=typeof b.curvePointFactor||"undefined"!=typeof b.fitPointDist)throw Error("CurvedLines detected illegal parameters. The CurvedLines API changed with version 1.0.0 please check the options object.");if(1==f.curvedLines.apply&&void 0===f.originSeries&&1.005<a)if(f.lines.fill){a=u(h,f.curvedLines,1);f=u(h,f.curvedLines,2);h.pointsize=3;h.points=
[];for(var d=b=0,e=0;e<a.length||b<f.length;)a[e]==f[b]?(h.points[d]=a[e],h.points[d+1]=a[e+1],h.points[d+2]=f[b+1],b+=2,e+=2):a[e]<f[b]?(h.points[d]=a[e],h.points[d+1]=a[e+1],h.points[d+2]=0<d?h.points[d-1]:null,e+=2):(h.points[d]=f[b],h.points[d+1]=1<d?h.points[d-2]:null,h.points[d+2]=f[b+1],b+=2),d+=3}else 0<f.lines.lineWidth&&(h.points=u(h,f.curvedLines,1),h.pointsize=2)}function u(a,f,h){if("undefined"!=typeof f.legacyOverride&&0!=f.legacyOverride){var b=jQuery.extend({fit:!1,curvePointFactor:20,
fitPointDist:void 0},f.legacyOverride);a:{var d=a.points,e=a.pointsize;f=d.length/e*Number(b.curvePointFactor);var c=[],l=[];a=0;if(b.fit){var g="undefined"==typeof b.fitPointDist?(d[d.length-e]-d[0])/5E4:Number(b.fitPointDist);for(b=0;b<d.length;b+=e){var k=b;var m=b+h;var p=d[k]-g;var n=d[k]+g;for(var q=2;p==d[k]||n==d[k];)p=d[k]-g*q,n=d[k]+g*q,q++;c[a]=p;l[a]=d[m];a++;c[a]=d[k];l[a]=d[m];a++;c[a]=n;l[a]=d[m];a++}}else for(b=0;b<d.length;b+=e)k=b,m=b+h,c[a]=d[k],l[a]=d[m],a++;h=c.length;d=[];e=
[];d[0]=0;d[h-1]=0;e[0]=0;for(b=1;b<h-1;++b){a=c[b+1]-c[b-1];if(0==a){f=[];break a}a=(c[b]-c[b-1])/a;k=a*d[b-1]+2;d[b]=(a-1)/k;e[b]=(l[b+1]-l[b])/(c[b+1]-c[b])-(l[b]-l[b-1])/(c[b]-c[b-1]);e[b]=(6*e[b]/(c[b+1]-c[b-1])-a*e[b-1])/k}for(a=h-2;0<=a;--a)d[a]=d[a]*d[a+1]+e[a];b=(c[h-1]-c[0])/(f-1);e=[];k=[];m=[];e[0]=c[0];k[0]=l[0];m.push(e[0]);m.push(k[0]);for(a=1;a<f;++a){e[a]=e[0]+a*b;g=h-1;for(p=0;1<g-p;)n=Math.round((g+p)/2),c[n]>e[a]?g=n:p=n;n=c[g]-c[p];if(0==n){f=[];break a}q=(c[g]-e[a])/n;var r=
(e[a]-c[p])/n;k[a]=q*l[p]+r*l[g]+((q*q*q-q)*d[p]+(r*r*r-r)*d[g])*n*n/6;m.push(e[a]);m.push(k[a])}f=m}return f}c=a.points;l=a.pointsize;a=w(a,f,h);d=[];for(e=b=0;e<c.length-l;e+=l){g=e;p=e+h;n=c[g];k=c[g+l];m=(k-n)/Number(f.nrSplinePoints);d.push(c[g]);d.push(c[p]);for(g=n+m;g<k;g+=m)d.push(g),d.push(a[b](g));b++}d.push(c[c.length-l]);d.push(c[c.length-l+h]);return d}function w(a,f,h){var b=a.points;a=a.pointsize;for(var d=[],e=[],c=0;c<b.length-a;c+=a){var l=c,g=c+h,k=b[l+a]-b[l];g=b[g+a]-b[g];d.push(k);
e.push(g/k)}k=[e[0]];if(f.monotonicFit)for(c=1;c<d.length;c++)if(f=e[c],l=e[c-1],0>=f*l)k.push(0);else{var m=d[c],p=d[c-1];g=m+p;k.push(3*g/((g+m)/l+(g+p)/f))}else for(c=a;c<b.length-a;c+=a)l=c,g=c+h,k.push(Number(f.tension)*(b[g+a]-b[g-a])/(b[l+a]-b[l-a]));k.push(e[e.length-1]);l=[];m=[];for(c=0;c<d.length;c++){p=k[c];g=k[c+1];f=e[c];var n=1/d[c];g=p+g-f-f;l.push(g*n*n);m.push((f-g-p)*n)}e=[];for(c=0;c<d.length;c++)e.push(function(a,b,c,d,e){return function(f){f-=a;var g=f*f;return b*f*g+c*g+d*f+
e}}(b[c*a],l[c],m[c],k[c],b[c*a+h]));return e}t.hooks.processOptions.push(function(a,f){f.series.curvedLines.active&&a.hooks.processDatapoints.unshift(v)})},options:{series:{curvedLines:{active:!1,apply:!1,monotonicFit:!1,tension:.5,nrSplinePoints:20,legacyOverride:void 0}}},name:"curvedLines",version:"1.1.1"})})(jQuery);